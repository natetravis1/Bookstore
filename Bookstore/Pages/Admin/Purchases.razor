@page "/admin/purchases"
@inherits OwningComponentBase<IPurchaseRepository>

<PurchaseTable TableTitle="Unshipped Orders" Purchases="UnshippedOrders" 
               ButtonLabel="Order Shipped" PurchaseSelected="CollectPurchase"></PurchaseTable>

<PurchaseTable TableTitle="Shipped Orders" Purchases="ShippedOrders"
               ButtonLabel="Reset" PurchaseSelected="ResetPurchase"></PurchaseTable>

<button class="btn btn-info" @onclick="@(x => UpdateData())">Refresh Data</button>

@code {

    public IPurchaseRepository repo => Service;

    public IEnumerable<Purchase> AllOrders { get; set; }
    public IEnumerable<Purchase> UnshippedOrders { get; set; }
    public IEnumerable<Purchase> ShippedOrders { get; set; }

    protected async override Task OnInitializedAsync()
    {
        await UpdateData();
    }

    public async Task UpdateData()
    {
        AllOrders = await repo.Purchases.ToListAsync();
        UnshippedOrders = AllOrders.Where(x => !x.OrderShipped);
        ShippedOrders = AllOrders.Where(x => x.OrderShipped);
    }

    public void CollectPurchase(int id) => UpdatePurchase(id, true);
    public void ResetPurchase(int id) => UpdatePurchase(id, false);

    public void UpdatePurchase(int id, bool shipped)
    {
        Purchase p = repo.Purchases.FirstOrDefault(x => x.PurchaseId == id);
        p.OrderShipped = shipped;
        repo.SavePurchase(p);
    }

}